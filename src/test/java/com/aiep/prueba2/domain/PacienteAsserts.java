package com.aiep.prueba2.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class PacienteAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPacienteAllPropertiesEquals(Paciente expected, Paciente actual) {
        assertPacienteAutoGeneratedPropertiesEquals(expected, actual);
        assertPacienteAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPacienteAllUpdatablePropertiesEquals(Paciente expected, Paciente actual) {
        assertPacienteUpdatableFieldsEquals(expected, actual);
        assertPacienteUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPacienteAutoGeneratedPropertiesEquals(Paciente expected, Paciente actual) {
        assertThat(expected)
            .as("Verify Paciente auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPacienteUpdatableFieldsEquals(Paciente expected, Paciente actual) {
        assertThat(expected)
            .as("Verify Paciente relevant properties")
            .satisfies(e -> assertThat(e.getName()).as("check name").isEqualTo(actual.getName()))
            .satisfies(e -> assertThat(e.getAge()).as("check age").isEqualTo(actual.getAge()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPacienteUpdatableRelationshipsEquals(Paciente expected, Paciente actual) {
        assertThat(expected)
            .as("Verify Paciente relationships")
            .satisfies(e -> assertThat(e.getMedico()).as("check medico").isEqualTo(actual.getMedico()))
            .satisfies(e -> assertThat(e.getCentroSalud()).as("check centroSalud").isEqualTo(actual.getCentroSalud()));
    }
}
